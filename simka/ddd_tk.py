#!/usr/bin/python3
# Filename: simka/ddd_tk.py             -*- mode:Python; coding:utf-8 -*-

import tkinter as tk
from tkinter import font
from tkinter import *
import socket
import threading
import yaml
import pdb

# globals
root = None
canvas = None
tk = None
foo = None
bar = None

# P1 phosphor was a saturated green with persistance
Green="#80FF80"
GreenP1="#AFFF80"
Blue="#0090FF"
BlueP1="#80AFFF"
Black="#202020"
offBlack="#404040"
Brown="#402020"

(ox,oy)=(15,15)
paper = None
servsock=None
usersock=None

'''
Generate new Data Disc instructions 
using "macro-like" python functions.
'''
def TEXTWORD(w): # pack 0 to 5 characters of text into PDP10 word
    word=0
    for c in w[0:5]: # make sure argument width is five or fewer.
        word = (word<<7) | sailcode[c]  # sailcode is like ord(c) but decodes SAIL-WAITS characters from unicode into SAIL 7-bit
    return (word<<1)|1 # return DDD text command PDP10 word
def DPYSTR(s):
    s += "\0"*(5-len(s)%5) # pad right with nulls (not strictly necessary)
    words = [ s[p:p+5] for p in range(0,len(s),5) ]
    return [ TEXTWORD(w) for w in words ]
sailcode={
    "↓":1,"α":2,"β":3,"∧":4,"¬":5,"ε":6,"π":7,
    "λ":0o10,"\t":0o11,"\n":0o12,"\013":0o13,"\f":0o14,"\r":0o15,"∞":0o16,"∂":0o17,
    "⊂":0o20,"⊃":0o21,"∩":0o22,"∪":0o23,"∀":0o24,"∃":0o25,"⊗":0o26,"↔":0o27,
    "_":0o30,"→":0o31,"~":0o32,"≠":0o33,"≤":0o34,"≥":0o35,"≡":0o36,"∨":0o37,    
    "↑":0o136,"←":0o137,    
    "{":0o173,"|":0o174,"§":0o175,"}":0o176,"\b":0o177,
}
sailchar={
    0:"",1:"↓",2:"α",3:"β",4:"∧",5:"¬",6:"ε",7:"π",
    0o10:"λ",0o11:"\t",0o12:"\n",0o13:"\013",0o14:"\f",0o15:"\r",0o16:"∞",0o17:"∂",
    0o20:"⊂",0o21:"⊃",0o22:"∩",0o23:"∪",0o24:"∀",0o25:"∃",0o26:"⊗",0o27:"↔",
    0o30:"_",0o31:"→",0o32:"~",0o33:"≠",0o34:"≤",0o35:"≥",0o36:"≡",0o37:"∨",
    0o136:"↑",0o137:"←",0o173:"{",0o174:"|",0o175:"§",0o176:"}",
}
# Load execution does the table completion
sailcode[chr(0)]=0
for x in range(0o40,0o136):
    sailcode[chr(x)]=x
    sailchar[x]=chr(x)
for x in range(0o140,0o173):
    sailcode[chr(x)]=x
    sailchar[x]=chr(x)
# omit NUL and TAB.
# VT is  integral \u222B
# FF is plusminus \u00B1
# RUBOUT is tilde
sail_decode_for_DDD={
    0:"",1:"↓",2:"α",3:"β",4:"∧",5:"¬",6:"ε",7:"π",
    0o10:"λ",0o11:"",0o12:"\n",0o13:"∫",0o14:"±",0o15:"\r",0o16:"∞",0o17:"∂",
    0o20:"⊂",0o21:"⊃",0o22:"∩",0o23:"∪",0o24:"∀",0o25:"∃",0o26:"⊗",0o27:"↔",
    0o30:"_",0o31:"→",0o32:"~",0o33:"≠",0o34:"≤",0o35:"≥",0o36:"≡",0o37:"∨",
    0o136:"↑",0o137:"←",0o173:"{",0o174:"|",0o175:"§",0o176:"}",0o177:"~"
}
"""
# The data disc terminal available banner "Take Me I'm Yours!" has some lowercase.
# Display color blue until replaced by client monitor updates in P31 green.
        moveto( x=2, y=348 )
        ␣␣␣␣␣␣␣␣␣␣␣␣␣DD␣JBS,TCOR␣␣R,RCOR␣UCOR␣␣NL␣DSKQ\r\n
        ␣␣␣␣␣␣␣␣␣␣␣␣␣␣0␣␣␣0,0␣␣␣␣␣0,0␣␣␣178K␣␣␣␣%␣␣0D␣␣JUL␣26␣␣FRIDAY␣␣15:07\r\n
        ␣\r\n"
        ␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣Take␣Me␣I'm␣Yours!\r\n
"""
DDD_example=(
    0,
    0o036044461214,
    0o004064103454,
    0o201004020101,
    0o201004020101,
    0o201004042211,
    0o202250251531,
    0o522071751101,
    0o202445451207,
    0o476444052607,
    0o476444020235,
    0o461010451627,
    0o504321200001,
    0o201004020101,
    0o201004020101,
    0o201004020141,
    0o201004030131,
    0o301004020101,
    0o201405430101,
    0o201006133561,
    0o455004020101,
    0o225004030211,
    0o201011252631,
    0o201446620101,
    0o432451142203,
    0o544000000001,
    0o201006134165,
    0o305521505001,
    0o004010023334,
    0o200321200001,
    0o000000000001,
    0o201004020101,
    0o201004020101,
    0o201004020101,
    0o201004020101,
    0o201004020101,
    0o201004020101,
    0o201004052303,
    0o657124046713,
    0o202224766501,
    0o547376571347,
    0o204321200001,
    0,
)
I_char_dx = [1,  6, 12, ]
I_char_dy = [1, 12, 24, ]
DDD_Font = None

def nlz(word):
    "number of leading zeroes in a 36-bit PDP10 word"
    w = word & 0xFFFFFFFFF
    n = (36,'{0:036b}'.format(w).index('1'))[w>0]
    return n

def vprint(*args,**kwargs):
    print(*args,**kwargs)
    pass

class Triple_DDD_display_service( threading.Thread ):
    def __init__(me):
        threading.Thread.__init__( me )
        # paper.delete('1.0',END)
    def run( me ):
        global tick,root,usersock
        global paper
        global foo,bar
        for canv in root.can:
            canv.delete( canv.tag )
            convert_ddd_into_tk( canv, DDD_example, BlueP1 ) # Take me I'm yours!
            msgstr=""
        while True:
            data = usersock.recv( 2*8192 )
            if not data:
                usersock.close()
                usersock = None
                break
            msg = data.decode()
            
            # Inspect YAML message received.
            print("\nReceive YAML msg= {}".format(msg))
            # continue # from HERE when changing the message format
        
            # Parse YAML commands sent from simka
            namval= yaml.safe_load(msg)
            for k in namval:
                val = namval[k]
                if k[:4]=='VDS_':
                    w = int(val,8)
                    kb = int(k[4:],8)
                    tv = kb + 0o20
                    foo[kb] = w & 7
                    bar[kb] = w >> 4
                    if kb-6 in range(4):
                        text="Terminal TV#{:o} keyboard#{:o} crossbar hex {:08X} atv#{:2o}".format( tv, kb, bar[kb], foo[kb] )
                        root.lab[kb-6].configure(text=text)
                        root.can[kb-6].delete( 'all' )
                    vprint("VDS tv={:0} kb#{:o} cross bar=0x{:08x} foo={}".format(tv,kb,bar[kb],foo[kb]))
                elif k=='DD_code':
                    buf = [int(x,8) for x in val.split()] # From octal PDP10 words to Python integer list
                    vprint("DD buf={}".format(buf))
                    for canv in root.can:
                        convert_ddd_into_tk( canv, buf, Green )
        
        print("DDD display service thread finished")
        for canv in root.can:
            canv.delete( canv.tag )
            test_pattern(canv)

def convert_ddd_into_tk( canvas, DDbuf, Fill ):
    n = len( DDbuf )
    siz = 1
    gmode = 0
    (  ox,  oy ) = (    10,     10 ) # offset DD raster within canvas
    (  x0,  y0 ) = (    0,       0 ) # DD beam starting coordinates
    ( high, wide, gmode ) = (0,0,0)
    (dd,kb,ln,tag) = (canvas.dd, canvas.kb, canvas.ln, canvas.tag)
    i = 1
    while i < n:
        word = DDbuf[i]
        vprint("_%4d / %013o  " % (i, word),)
        if word & 1: # Text word
            msg=""
            while word & 1:
                b1 = word >> 29 & 0o177
                b2 = word >> 22 & 0o177
                b3 = word >> 15 & 0o177
                b4 = word >>  8 & 0o177
                b5 = word >>  1 & 0o177
                msg += "".join(sail_decode_for_DDD.get(x,chr(x)) for x in (b1,b2,b3,b4,b5))
                i += 1
                if (i >= n) or (DDbuf[i] & 1 != 1) :
                    i -= 1
                    break
                word = DDbuf[i]
            vprint(tag+" dpystr(ascid|"+msg+"|)")
            for snip in re.split(r'(\r|\n)',msg):
                if snip=='\r':
                    x0 = 2
                elif snip=='\n':
                    y0 += 12
                elif len(snip):
                    canvas.create_text(10+x0, 10+y0, text=snip, font=DDD_Font[siz], fill=Fill, anchor="nw", tags=tag)
                    x0 += len(snip) * I_char_dx[siz]
                        
        elif (word & 0o17)==2 : # Graphics word
            msg=""
            while (i<=n) and (word & 0o17)==2:
                msg += bin(1<<32 | word>>4)[3:]
                i += 1
                word = DDbuf[i]

            canvas.create_text( 10+x0, 10+y0,
                                text=msg.replace('0',' ').replace("1","█"),
                                font=DDD_Font[0], fill=Fill, anchor="nw", tags=tag)
            x0 += len(msg)
            vprint(tag+" bits("+hex(int(msg,2)).replace('0000',' ')+")")
                
        elif (word & 7)==4: # Command word
            (op1,op2,op3,ops) = ((word>>9)&7,(word>>6)&7,(word>>3)&7,(word>>3)&0o777)
            (d1,d2,d3) = ((word>>28)&0xFF,(word>>20)&0xFF,(word>>12)&0xFF,)            
            
            if op1==1 :
                gmode=d1 & 0o01
                high= d1 & 0o40
                wide= d1 & 0o10
            if op2==1 :
                gmode=d2 & 0o01
                high= d2 & 0o40
                wide= d2 & 0o10
            if op3==1 :
                gmode=d3 & 0o01
                high= d3 & 0o40
                wide= d3 & 0o10
            if 1 in (op1,op2,op3):
                vprint("%s commands: %o/%03o   %o/%03o   %o/%03o  %s" %(tag,op1,d1, op2,d2, op3,d3, "gG"[gmode==1]+"Hh"[high!=0]+"wW"[wide!=0]))

            if ops == 0o345 :
                x0 = d1
                y0 = (((word>>20) & 0o37)<<4) | ((word>>12) & 0o17)
                if (gmode&1)==0 : y0 &= -2 # When text mode force Y to even
                vprint("{} moveto  x={:3d}  y={:3d} {}".format(tag,x0,y0,"gG"[gmode==1]+"Hh"[high!=0]+"wW"[wide!=0]))

            elif ops in [ 0o121, 0o123 ] :
                vprint("{:08x} {} {} d2= DD#{:o} Canvas ln#{:o} dd#{:o}".format(bar[ln], tag,("select","erase")[d1==0o17],d2, ln, dd))                
                if bar[kb] & (1<<(31-d2)) == 0 :
                    return
                if d1==0o17 :
                    canvas.delete( 'all' )
                    
            elif ops == 0o333 :
                x0 = (word>>12) & 0xFF
                vprint("{} set x={}".format(tag,x0))

            else:
                vprint("%s commands: %o/%03o   %o/%03o   %o/%03o" %(tag,op1,d1, op2,d2, op3,d3,))
                

        i+=1    
    
class DDD_App:
    def __init__(self):
        pass

    # The MRC ( Marc Reed Crispin, 1956-2012 ) who phantom glyphs
    sail_one_month = """
....................................................................................
.................................................*..................................
.................................................**.................................
........................................********.*.******...........................
.......................................*..******.*.*******..........................
......................................*..******..**.*****...........................
.....................................*...........*.*....*...........................
................................*...*...********.*.*******..........................
...............................***.*.....*******.*.********.........................
.............................*..*.*.....*******..*..******.*........................
............................*...**.*.............**....*....*.......................
..........................*.....*...*...********.*.*******...*......................
.........................*......*....*...*******.*.********...*.....................
.......................*........*.....*.******...*...******....*....................
......................*.........**....**.........*....*....*....*...................
....................*...........*.*....***.*****.*.********.*....*..................
...................*............*..*...****.****.*.*********.*....*.................
.................*..............*...*...****.***.*.*********..*....*................
................*...............*....*..*****....*....*****....*....*...............
...............*.**.............*....**.******...*.........*...**....*..............
...............*..***...........*.....***.*****..*.**********...**....*.............
..............*....****.........**....****.*****.*.***********...***...*............
..............*....******.......*.*....****.******.************..****...*...........
.............*......*******.....*..*...*****.....*.....******..*..*****..*..........
.............*.....**********...*...**.*******...*..............*..*****..*.........
............*......************.*....**.*******..*.***********...*..******.*........
...........*......*************.*....***.*******.*.************..**..******.*.......
...........*......*************.*.....***.......**.*************..**..********......
..........*......**************.*....*****.*****.*.**************..**.*********.....
.........*......***************.*...*.*****.****.*.**************..***.*********....
.........*....*****************.*..*.*******.***.*.***************.****.*********...
........*...*******************.*.*..********.**.*.***************.*****.*********..
.......*.**********************.**..**********...*.....***********.******.***.*****.
......*************************.*...***********..*.........******.********.......***
..........*.....................*..*****....****.*.............**.****.****...***...
.........*......................*..**.........****...............***.......***......
........**********..............*.*.............**.............**.......***.........
.......***********..............**...............*...........**......***............
........*************************................*************************..........
.........**************************************************************.............
...........******..**.***.*....******.***.**..**.***.*.....*.**.*****...............
.............***.**.*..**.*.*********..*..*.**.*..**.***.***.**.*****...............
............****.**.*.*.*.*...*******.*.*.*.**.*.*.*.***.***....****................
...........*****.**.*.**..*.*********.***.*.**.*.**..***.***.**.****................
..........*******..**.***.*....******.***.**..**.***.***.***.**.***.................
..........*********************************************************.................
....................................................................................
....................................................................................
"""
    sail_two_month = """
.................................................*...........................................................
.................................................*........................*..................................
.................................................*........................**.................................
........................................********.*.******........********.*.******...........................
.......................................*..******.*.*******.....**..******.*.*******..........................
......................................*..******..*..******...**...******..**.*****...........................
.....................................*...........*.........**.............*.*....*...........................
................................*...*...********.*.********......********.*.*******..........................
...............................***.*.....*******.*.********.......*******.*.********.........................
.............................*..*.*.....*******..*..******.......*******..*..******.*........................
............................*...**.*.............*........................**....*....*.......................
..........................*.....*...*...********.*.*******.......********.*.*******...*......................
.........................*......*....*...*******.*.********.......*******.*.********...*.....................
.......................*........*.....*.******...*...*****.......******...*...******....*....................
......................*.........**....**.........*........................*....*....*....*...................
....................*...........*.*....***.*****.*.********.....*********.*.********.*....*..................
...................*............*..*...****.****.*.*********.....********.*.*********.*....*.................
.................*..............*...*...****.***.*.*********.....********.*.*********..*....*................
................*...............*....*..*****....*....*****.....******....*....*****....*....*...............
...............*.**.............*....**.******...*........................*.........*...**....*..............
...............*..***...........*.....***.*****..*.**********..**********.*.**********...**....*.............
..............*....****.........**....****.*****.*.***********..*********.*.***********...***...*............
..............*....******.......*.*....****.******.***********..*********.*.************..****...*...........
.............*......*******.....*..*...*****.....*.....******..*******....*.....******..*..*****..*..........
.............*.....**********...*...**.*******...*........................*..............*..*****..*.........
............*......************.*....**.*******..*.***********.**********.*.***********...*..******.*........
...........*......*************.*....***.*******.*.************.*********.*.************..**..******.*.......
...........*......*************.*.....***.......**.*************.********.*.*************..**..********......
..........*......**************.*....*****.*****.*.**************.*******.*.**************..**.*********.....
.........*......***************.*...*.*****.****.*.**************.*******.*.**************..***.*********....
.........*....*****************.*..*.*******.***.*.***************.******.*.***************.****.*********...
........*...*******************.*.*..********.**.*.***************.******.*.***************.*****.*********..
.......*.**********************.**..**********...*.....***********.**.....*.....***********.******.***.*****.
......*************************.*...***********..*.........******.........*.........******.********.......***
..........*.....................*..*****....****.*.............**.........*.............**.****.****...***...
.........*......................*..**.........****........................*...............***.......***......
........**********..............*.*.............**........................*.............**.......***.........
.......***********..............**...............*........................*...........**......***............
........*************************................*........................*************************..........
.........***************************************************************************************.............
...........***************.....*.***.**..*******.***.**..**.***.*.....*.**.**...**************...............
.............***************.***.***.*.**.******..*..*.**.*..**.***.***.**.*.*****************...............
............****************.***.*.*.*.**.******.*.*.*.**.*.*.*.***.***....**..**************................
...........*****************.***..*..*.**.******.***.*.**.*.**..***.***.**.****.*************................
..........******************.***.***.**..*******.***.**..**.***.***.***.**.*...*************.................
..........**********************************************************************************.................
.............................................................................................................
.............................................................................................................
"""
    sail_three_month = """
..........................................................................*...........................................................
.................................................*........................*........................*..................................
.................................................*........................*........................**.................................
........................................********.*.******........********.*.******........********.*.******...........................
.......................................*..******.*.*******.....**..******.*.*******.....**..******.*.*******..........................
......................................*..******..*..*****....**...******..*..******...**...******..**.*****...........................
.....................................*...........*.........**.............*.........**.............*.*....*...........................
................................*...*...********.*.********......********.*.********......********.*.*******..........................
...............................***.*.....*******.*.********.......*******.*.********.......*******.*.********.........................
.............................*..*.*.....*******..*..******.......*******..*..******.......*******..*..******.*........................
............................*...**.*.............*........................*........................**....*....*.......................
..........................*.....*...*...********.*.*******.......********.*.*******.......********.*.*******...*......................
.........................*......*....*...*******.*.********.......*******.*.********.......*******.*.********...*.....................
.......................*........*.....*.******...*...*****.......******...*...*****.......******...*...******....*....................
......................*.........**....**.........*........................*........................*....*....*....*...................
....................*...........*.*....***.*****.*.********.....*********.*.********.....*********.*.********.*....*..................
...................*............*..*...****.****.*.*********.....********.*.*********.....********.*.*********.*....*.................
.................*..............*...*...****.***.*.*********.....********.*.*********.....********.*.*********..*....*................
................*...............*....*..*****....*....*****.....******....*....*****.....******....*....*****....*....*...............
...............*.**.............*....**.******...*........................*........................*.........*...**....*..............
...............*..***...........*.....***.*****..*.**********..**********.*.**********..**********.*.**********...**....*.............
..............*....****.........**....****.*****.*.***********..*********.*.***********..*********.*.***********...***...*............
..............*....******.......*.*....****.******..**********..*********.*.***********..*********.*.************..****...*...........
.............*......*******.....*..*...*****.....*.....******..******.....*.....******..*******....*.....******..*..*****..*..........
.............*.....**********...*...**.*******...*........................*........................*..............*..*****..*.........
............*......************.*....**.*******..*.***********.**********.*.***********.**********.*.***********...*..******.*........
...........*......*************.*....***.*******.*.************.*********.*.************.*********.*.************..**..******.*.......
...........*......*************.*.....***.......**.*************.********.*.*************.********.*.*************..**..********......
..........*......**************.*....*****.*****.*.**************.*******.*.**************.*******.*.**************..**.*********.....
.........*......***************.*...*.*****.****.*.**************.*******.*.**************.*******.*.**************..***.*********....
.........*....*****************.*..*.*******.***.*.***************.******.*.***************.******.*.***************.****.*********...
........*...*******************.*.*..********.**.*.***************.******.*.***************.******.*.***************.*****.*********..
.......*.**********************.**..**********...*.....***********.**.....*.....***********.**.....*.....***********.******.***.*****.
......*************************.*...***********..*.........******.........*.........******.........*.........******.********.......***
..........*.....................*..*****....****.*.............**.........*.............**.........*.............**.****.****...***...
.........*......................*..**.........****........................*........................*...............***.......***......
........**********..............*.*.............**........................*........................*.............**.......***.........
.......***********..............**...............*........................*........................*...........**......***............
........*************************................*........................*........................*************************..........
.........****************************************************************************************************************.............
...........***********************.....*.**.*...**....*....******.***.**..**.***.*.....*.**.**...**********************...............
.............***********************.***.**.*.**.*.****.*********..*..*.**.*..**.***.***.**.*.*************************...............
............************************.***....*..***...**...*******.*.*.*.**.*.*.*.***.***....**..**********************................
...........*************************.***.**.*.*.**.****.*********.***.*.**.*.**..***.***.**.****.*********************................
..........**************************.***.**.*.**.*....*....******.***.**..**.***.***.***.**.*...*********************.................
..........***********************************************************************************************************.................
......................................................................................................................................
......................................................................................................................................
"""
    sail_four_month = """
..........................................................................*........................*...........................................................
.................................................*........................*........................*........................*..................................
.................................................*........................*........................*........................**.................................
........................................********.*.******........********.*.******........********.*.******........********.*.******...........................
.......................................*..******.*.*******.....**..******.*.*******.....**..******.*.*******.....**..******.*.*******..........................
......................................*..******..*..*****....**...******..*..******...**...******..*..******...**...******..**.*****...........................
.....................................*...........*.........**.............*.........**.............*.........**.............*.*....*...........................
................................*...*...********.*.********......********.*.********......********.*.********......********.*.*******..........................
...............................***.*.....*******.*.********.......*******.*.********.......*******.*.********.......*******.*.********.........................
.............................*..*.*.....*******..*..******.......*******..*..******.......*******..*..******.......*******..*..******.*........................
............................*...**.*.............*........................*........................*........................**....*....*.......................
..........................*.....*...*...********.*.*******.......********.*.*******.......********.*.*******.......********.*.*******...*......................
.........................*......*....*...*******.*.********.......*******.*.********.......*******.*.********.......*******.*.********...*.....................
.......................*........*.....*.******...*...*****.......******...*...*****.......******...*...*****.......******...*...******....*....................
......................*.........**....**.........*........................*........................*........................*....*....*....*...................
....................*...........*.*....***.*****.*.********.....*********.*.********.....*********.*.********.....*********.*.********.*....*..................
...................*............*..*...****.****.*.*********.....********.*.*********.....********.*.*********.....********.*.*********.*....*.................
.................*..............*...*...****.***.*.*********.....********.*.*********.....********.*.*********.....********.*.*********..*....*................
................*...............*....*..*****....*....*****.....******....*....*****.....******....*....*****.....******....*....*****....*....*...............
...............*.**.............*....**.******...*........................*........................*........................*.........*...**....*..............
...............*..***...........*.....***.*****..*.**********..**********.*.**********..**********.*.**********..**********.*.**********...**....*.............
..............*....****.........**....****.*****.*.***********..*********.*.***********..*********.*.***********..*********.*.***********...***...*............
..............*....******.......*.*....****.******..**********..*********.*.***********..*********.*.***********..*********.*.************..****...*...........
.............*......*******.....*..*...*****.....*.....******..******.....*.....******..*******....*.....******..*******....*.....******..*..*****..*..........
.............*.....**********...*...**.*******...*........................*........................*........................*..............*..*****..*.........
............*......************.*....**.*******..*.***********.**********.*.***********.**********.*.***********.**********.*.***********...*..******.*........
...........*......*************.*....***.*******.*.************.*********.*.************.*********.*.************.*********.*.************..**..******.*.......
...........*......*************.*.....***.......**.*************.********.*.*************.********.*.*************.********.*.*************..**..********......
..........*......**************.*....*****.*****.*.**************.*******.*.**************.*******.*.**************.*******.*.**************..**.*********.....
.........*......***************.*...*.*****.****.*.**************.*******.*.**************.*******.*.**************.*******.*.**************..***.*********....
.........*....*****************.*..*.*******.***.*.***************.******.*.***************.******.*.***************.******.*.***************.****.*********...
........*...*******************.*.*..********.**.*.***************.******.*.***************.******.*.***************.******.*.***************.*****.*********..
.......*.**********************.**..**********...*.....***********.**.....*.....***********.**.....*.....***********.**.....*.....***********.******.***.*****.
......*************************.*...***********..*.........******.........*.........******.........*.........******.........*.........******.********.......***
..........*.....................*..*****....****.*.............**.........*.............**.........*.............**.........*.............**.****.****...***...
.........*......................*..**.........****........................*........................*........................*...............***.......***......
........**********..............*.*.............**........................*........................*........................*.............**.......***.........
.......***********..............**...............*........................*........................*........................*...........**......***............
........*************************................*........................*........................*........................*************************..........
.........*****************************************************************************************************************************************.............
...........**************************************....**..**.**.*...*******.***.**..**.***.*.....*.**.**...**************************************...............
.............************************************.****.**.*.**.*.**.******..*..*.**.*..**.***.***.**.*.*****************************************...............
............*************************************...**.**.*.**.*..********.*.*.*.**.*.*.*.***.***....**..**************************************................
...........**************************************.****.**.*.**.*.*.*******.***.*.**.*.**..***.***.**.****.*************************************................
..........***************************************.*****..***..**.**.******.***.**..**.***.***.***.**.*...*************************************.................
..........************************************************************************************************************************************.................
...............................................................................................................................................................
...............................................................................................................................................................
"""
    sail_zero = """
........................................***.....................
.......................................**.**....................
.......................................**.**....................
.......................................**.*.*...................
......................................***.*.*...................
......................................***.*..*..................
.....................................****.****..................
.....................................****.*.***.................
....................................*****.*.***.................
...................................******.*..***................
..................................*******.*..***................
.................................********.*...***...............
...............................**********.*...****..............
.............................************.*...*****.............
...........................**************.*...******............
.........................****************.*...*******...........
......................*******************.*...********..........
...................**********************.*..**********.........
..............**************************..*..************.......
.........*******************************..******....******......
...........*.........***********........*****...........***.....
..........*****...........................*................*....
.........*******..........................*......***************
.........***************************************************....
.........************...****.*****.***.****************.........
..........**********.******.*.****.***.*************............
..........***********..***.***.***.***.***********..............
............***********.**.....***.***.*********................
.............*******...***.***.***.***....*****.................
...............*******************************..................
...................*************************....................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
"""
    available = """
             DD JBS,TCOR  R,RCOR UCOR  NL DSKQ
              0   0,0     0,0   178K    %  0D  JUL 26  FRIDAY  15:07
 
                                 Take Me I'm Yours!
"""
def test_pattern(canvas):
    '''
    Data Disc bit raster 480. lines by 512. columns
    standard character font, each glyph is  6 x 12.
    double size font,        each glyph is 12 x 24.
    graphics bits font,      each glyph is  1 x 1.
    
    CR sets x  =  2.
    LF sets y += 12.

    177 TB displays T/B u2409 ␉
    177 LF displays L/F u240a ␊
    177 CR displays C/R u240D ␍

    ai(2,348)
    dpystr(
    "␣␣␣␣␣␣␣␣␣␣␣␣␣DD␣JBS,TCOR␣␣R,RCOR␣UCOR␣␣NL␣DSKQ\r\n"
    "␣␣␣␣␣␣␣␣␣␣␣␣␣␣0␣␣␣0,0␣␣␣␣␣0,0␣␣␣178K␣␣␣␣%␣␣0D␣␣JUL␣26␣␣FRIDAY····␣␣15:07\r\n"
    "␣\r\n"
    "␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣␣Take␣Me␣I'm␣Yours!\r\n"
    )
    # Screen 480 x 512 pixel origin (0,0) is at upper left, North West corner of raster.
    # ------------------------------------------
    # SIZE =0  480 x 512     1       1
    # SIZE =1  40 x  85     12      25
    # SIZE =2  20 x  42     14      28
    # ------------------------------------------
    # characters per line   :  512, 85, 42,
    #      lines per screen :  480, 42, 20,
'''
    global app
    global DDD_Font
    DDD_Font = [ # size negative is Pixels
        font.Font(family='Ubuntu Mono',size=-1),  # represent DD pixels as characters
        font.Font(family='Ubuntu Mono',size=-11), #  85 cpl
        font.Font(family='Ubuntu Mono',size=-24), #  42 cpl
    ]
    # unicode Full Block u2588 █ 
    # I.Canvas screen ruler for chosing font sizes to simulate DDD size table.
    r0="         1         2         3         4         5         6         7         8     "
    r1="␣␣␣␣␣␣␣␣␣1␣␣␣␣␣␣␣␣␣2␣␣␣␣␣␣␣␣␣3␣␣␣␣␣␣␣␣␣4␣␣␣␣␣␣␣␣␣5␣␣␣␣␣␣␣␣␣6␣␣␣␣␣␣␣␣␣7␣␣␣␣␣␣␣␣␣8␣␣␣␣␣"
    r2="1234567890123456789012345678901234567890123456789012345678901234567890123456789012345"
    r3="ABCDEFGHIJKLMNOPQRSTUVWXYZ ≤ π ε ↓ ∩ ¬ ≠ ≡ ∞ ← → ↔ ∃ ∀ ⊗ ∂ ∧ ∪ ≥ ⊂ ↑ λ ∨ β ⊃ α"
    r4="abcdefghijklmnopqrstuvwxyz ~ ! @ # $ % ^ & * ( ) _ + { } | : ? > < , . / ; ' \\ \""
    forty_lines = '\n'.join(["line "+str(i) for i in range(40)])    
    (dd,kb,ln,tag) = (canvas.dd, canvas.kb, canvas.ln, canvas.tag)
    beam = True
    (ox,oy) = (10,10)
    #
    # canvas.create_rectangle(ox-1,oy-1,512,480,fill=None,outline="orange",width=1,tags=tag)
    # canvas.create_rectangle(200,260,284,348,fill=None,outline="red",width=1,tags=tag)
    #
    canvas.create_text(ox+2,oy+100,text=r0[:85]+"\n"+r2[:85]+"\n"+r3[:85]+"\n"+r4[:85],font=DDD_Font[1],fill="white",anchor="nw",tags=tag)
    canvas.create_text(ox+2,oy+200,text=r0[:42]+"\n"+r2[:42],                          font=DDD_Font[2],fill="white",anchor="nw",tags=tag)
    # canvas.create_text(ox+2,oy+2,text=forty_lines, font=DDD_Font[1],fill="white",anchor="nw",tags=tag)
    for i in list(range(8)) + list(range(13,19)) + list(range(21,40)):
        canvas.create_text(ox+2,oy+i*12,text="line "+str(i), font=DDD_Font[1],fill="white",anchor="nw",tags=tag)
    for i in list(range(4)) +[6,7]+list(range(11,20)):
        canvas.create_text(ox+420,oy+i*24,text="line "+str(i), font=DDD_Font[2],fill="white",anchor="nw",tags=tag)    
    canvas.create_text(ox+60,oy+40,
                       text="Data Disc Test Pattern TV#{:o}".format(canvas.ln),
                       font=DDD_Font[2], fill="white", anchor="nw", tags=tag )    
    canvas.create_text(2,348-12,text=app.available,font=DDD_Font[1],fill=GreenP1,anchor="nw",tags=tag)
    glyph = app.sail_one_month.replace("*","█").replace("."," ")
    y=280
    for ln in glyph.splitlines():
        canvas.create_text(200,y,text=ln,font=DDD_Font[0],fill=GreenP1,anchor="nw",tags=tag)
        y+=1
    glyph = app.sail_four_month.replace("*","█").replace("."," ")
    y=420
    for ln in glyph.splitlines():
        canvas.create_text(200,y,text=ln,font=DDD_Font[0],fill=GreenP1,anchor="nw",tags=tag)
        y+=1

def main():
    """
    Stanford Data Disc central Display Processor
    reënactment for July 1974 system configuration,
    but include the 1980s glyphs.

    Display a Data Disc test pattern including two of the famous sail boat glyphs
    Worry about the three font sizes and the intra line spacing.
    Worry about origin (0,0) offset and frame border widths.
    Worry about good looking background and frame coloring.
    Demonstrate the simplicity / extragance of 
    using -1 pixel font size for the bit raster graphics.
    Experiment with the scaling of the 480x512 raster into larger and smaller windows.
    """
    global app, DDD_font
    global root,canvas
    global servsock,usersock
    global bar,foo

    bar=[1<<(31-9)]*64
    foo=[0]*64
    
    root = Tk()
    root.geometry('540x560+300+1024')
    root.tk_focusFollowsMouse()
    root["bg"] = offBlack
    root.title("DD test pattern");
    
    # easy to hit Quit button
    Button( root, text="Quit",
            font = font.Font(size=30,weight='bold'),
            fg="darkred",
            bg="white",
            activeforeground="white",
            activebackground="darkred",
            command=root.quit ).pack(side="bottom")

    canvas = Canvas( root,
                     width=(512+20),
                     height=(480+20),takefocus=1,
                     highlightthicknes=4,
                     highlightcolor="gold",
                     highlightbackground="gray",
                     background=offBlack,
                     name="tv26")
    canvas.pack(side="top", padx=0, pady=0)    
    
    canvas.dd = 0
    canvas.kb = 6
    canvas.ln = 0o26
    canvas.tag = "DD{:o}".format(canvas.dd)
    
    app = DDD_App()
    test_pattern(canvas)
    convert_ddd_into_tk( canvas, DDD_example, BlueP1 ) # Take me I'm yours!
    
    try:
        root.mainloop()
    finally:
        if servsock is not None:
            servsock.close()
        if usersock is not None:
            usersock.close()

if __name__ == "__main__" :
    main()
